排列是环形，说明第一间和最后一间不能同时被偷
把问题转移为max(偷第一间，偷最后一间)=max(nums[0：-1]，nums[1:])
def func(nums):

   def steal(start,end):
   length=end-start+1
   dp=[0]*length
   dp[0]=nums[start]
   dp[1]=max(nums[start],nums[start+1])
   for i in range(start+2,end+1):
     dp[i]=max(nums[i]+dp[i-2],dp[i-1])
   return dp[-1]
   
   if not nums:
     return 0
   elif len(nums)==1:
     return nums[0]
   elif len(nums)==2:
     return max(nums[0],nums[1])
   else:
     reutrn max(steal(0,len(nums)-2),steal(1,len(nums)-1))
     
   
